name: Ship Linux Installer

on:
  pull_request:
  push:
    branches:
      - main
      - 'preview/**'
    tags:
      - test*
      - v*

jobs:
  ship-linux-installer:
    runs-on: ${{ matrix.os }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERM: xterm
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        node-version:
          - '14'
        flavor:
          - deb
        arch:
          - x64

    steps:
      # Install deps and cache
      # Eventually it would be great if these steps could live in a separate YAML file
      # that could be included in line to avoid code duplication
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0


      
      - name: Set other variables
        id: vars
        run: |
          # Set generic source ref vars
          echo "::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}"
          echo "::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}"
          echo  ::set-output name=CURRENT_VERSION::v$(grep '"version"' package.json | cut -d '"' -f 4 | head -n 1)
          echo "::set-output name=EVENT_NAME::${GITHUB_EVENT_NAME}"
          # Unset vars if it makes sense to do so
          if [ "$GITHUB_REF" == "${GITHUB_REF#refs/tags/}" ]; then echo "::set-output name=SOURCE_TAG::"; fi
          if [ "$GITHUB_REF" == "${GITHUB_REF#refs/heads/}" ]; then echo "::set-output name=SOURCE_BRANCH::"; fi
      - name: Test user defined variables
        run: |
          echo "The SOURCE_NAME is ${{ steps.vars.outputs.SOURCE_NAME }}"
          echo "The SOURCE_BRANCH is ${{ steps.vars.outputs.SOURCE_BRANCH }}"
          echo "The SOURCE_TAG is ${{ steps.vars.outputs.SOURCE_TAG }}"
          echo "The CURRENT_VERSION is ${{ steps.vars.outputs.CURRENT_VERSION }}"
          echo "The EVENT_NAME is ${{ steps.vars.outputs.EVENT_NAME }}"
